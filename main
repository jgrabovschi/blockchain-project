#!/usr/bin/env python3

from chain import *
import threading
from server import *
#from client import *
import synch
from pending import *

bc = Blockchain()
pending_transactions = []

if __name__ == "__main__":
    t1 = threading.Thread(target=server, args=(pending_transactions,))
    t2 = threading.Thread(target=maintenance, args=(bc,))
    t3 = threading.Thread(target=synch.server, args=(bc,))
    t4 = threading.Thread(target=synch.client, args=(bc, pending_transactions, ))
    t5 = threading.Thread(target=accept_pending, args=(pending_transactions,))
    t6 = threading.Thread(target=verify_pending, args=(pending_transactions, bc))

    t1.start()
    t2.start()
    t3.start()
    t4.start()
    t5.start()
    t6.start()

    t1.join()
    t2.join()
    t3.join()
    t4.join()
    t5.join()
    t6.join()

    print("Exiting...")